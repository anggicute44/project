class Restoran:
    def __init__(self):
        self.size = 5
        self.map = [None] * self.size

    def _getHash(self, key):
        hash = 0
        for char in str(key):
            hash += ord(char)  # mendapatkan nilai ASCII
        return hash % self.size

    def _probing(self, key):
        for index in range(self.size):
            # Linear probing
            probeHash = self._linearProbing(key, index)
            if (self.map[probeHash] is None) or (self.map[probeHash] == "deleted"):
                return probeHash
        return None  # Jika tidak ada slot kosong

    def _linearProbing(self, key, index):
        return (self._getHash(key) + index) % self.size

    def tambahReservasi(self, key, value):
        key_hash = self._getHash(key)
        key_value = [key, value]

        if self.map[key_hash] is None:
            self.map[key_hash] = key_value
            return True

        # Jika terdapat konflik, lakukan probing
        key_hash = self._probing(key)
        if key_hash is None:
            print("Reservasi penuh, tidak dapat menambahkan.")
            return False

        self.map[key_hash] = key_value
        return True

    def lihatReservasi(self, key):
        key_hash = self._getHash(key)
        for index in range(self.size):
            probeHash = self._linearProbing(key, index)
            if self.map[probeHash] is None:
                break
            if self.map[probeHash] != "deleted" and self.map[probeHash][0] == key:
                return self.map[probeHash][1]
        return "None"

    def reserveDone(self, key):
        key_hash = self._getHash(key)
        for index in range(self.size):
            probeHash = self._linearProbing(key, index)
            if self.map[probeHash] is None:
                break
            if self.map[probeHash] != "deleted" and self.map[probeHash][0] == key:
                self.map[probeHash] = "deleted"
                return True
        return False

    def printAll(self):
        print("--- List Reservasi ---")
        for item in self.map:
            if item is not None and item != "deleted":
                print(f"Nama: {item[0]}, Jenis Reservasi: {item[1]}")
            elif item == "deleted":
                print("[Deleted]")
        print("----------------------")


if __name__ == "__main__":
    rak1 = Restoran()

    rak1.tambahReservasi("Draine", "Family Dinner")
    rak1.tambahReservasi("Perry", "Birthday Party")
    rak1.tambahReservasi("Octo", "Romantic Dinner")
    rak1.tambahReservasi("Peter", "Lunch")
    rak1.tambahReservasi("Hrain", "Test Food Wedding")
    rak1.tambahReservasi("Gura", "Garden Party")
    
    print(rak1.lihatReservasi("Octo"))  # Output: Romantic Dinner
    print(rak1.lihatReservasi("Buna"))  # Output: None

    rak1.reserveDone("Perry")
    rak1.reserveDone("Draine")
    rak1.printAll()
